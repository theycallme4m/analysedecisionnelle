import time
from views.menu_view import MenuView
from views.result_view import ResultView
from controllers.data_controller import DataController
from controllers.brute_force_controller import BruteForceController
from controllers.dp_controller import DPController

BUDGET = 500000  # Budget fixe (F CFA)


def main():
    print("\n=== OPTIMISATION D'INVESTISSEMENT (Horizon 2 ans) ===\n")

    # 1Ô∏è‚É£ Choix du dataset
    file_path = MenuView.select_dataset()
    method_choice = MenuView.select_method()

    # 2Ô∏è‚É£ Chargement des donn√©es
    actions = DataController.load_data(file_path)
    if len(actions) == 0:
        print("‚ùå Aucune donn√©e valide trouv√©e. V√©rifie ton fichier CSV (name, price, profit_pct).")
        return
    print(f"\n‚úÖ {len(actions)} actions charg√©es depuis '{file_path}'\n")

    # 3Ô∏è‚É£ Choix de la m√©thode (fourni par MenuView)
    choice = method_choice

    # --- Ex√©cution selon le choix ---
    if choice == "1":
        # M√©thode brute uniquement
        print("\n>>> Ex√©cution : Force Brute (am√©lior√©e) ...")
        t0 = time.perf_counter()
        result = BruteForceController.run(actions, budget=BUDGET)
        t1 = time.perf_counter()
        ResultView.display_results(result, "Force Brute (am√©lior√©e)")
        print(f"‚è± Temps d'ex√©cution : {t1 - t0:.4f} s")

    elif choice == "2":
        # M√©thode optimis√©e (DP am√©lior√©e)
        print("\n>>> Ex√©cution : Programmation Dynamique (optimis√©e) ...")
        t0 = time.perf_counter()
        result = DPController.run(actions, budget=BUDGET)
        t1 = time.perf_counter()
        ResultView.display_results(result, "Programmation Dynamique (optimis√©e)")
        print(f"‚è± Temps d'ex√©cution : {t1 - t0:.4f} s")

    elif choice == "3":
        # Comparatif entre BruteForce et DP
        print("\n>>> Ex√©cution compar√©e : BruteForce vs DP (optimis√©e) ...\n")

        # --- BruteForce ---
        print("‚è≥ M√©thode BruteForce en cours...")
        t0 = time.perf_counter()
        result_brute = BruteForceController.run(actions, budget=BUDGET)
        t1 = time.perf_counter()
        brute_time = t1 - t0
        ResultView.display_results(result_brute, "Force Brute")

        # --- DP Optimis√©e ---
        print("\n‚è≥ M√©thode DP (optimis√©e) en cours...")
        t0 = time.perf_counter()
        result_dp = DPController.run(actions, budget=BUDGET)
        t1 = time.perf_counter()
        dp_time = t1 - t0
        ResultView.display_results(result_dp, "DP (optimis√©e)")

        # --- Comparatif final ---
        print("\n=== üìä COMPARATIF FINAL ===")
        print(f"BruteForce : co√ªt={result_brute['total_cost']:.2f} | profit={result_brute['total_profit']:.2f} | temps={brute_time:.4f}s")
        print(f"DP Optimis√©e : co√ªt={result_dp['total_cost']:.2f} | profit={result_dp['total_profit']:.2f} | temps={dp_time:.4f}s")

        if result_dp['total_profit'] > result_brute['total_profit']:
            print("\n‚úÖ La m√©thode optimis√©e est plus performante !")
        else:
            print("\n‚öôÔ∏è La m√©thode brute donne un meilleur r√©sultat dans ce cas.")
    else:
        print("‚ùå Choix invalide. Fin du programme.")

    print("\nProgramme termin√©.\n")


if __name__ == "__main__":
    main()
